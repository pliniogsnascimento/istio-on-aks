apiVersion: v1
kind: Namespace
metadata:
  name: egresstest
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: Service
metadata:
  name: egress-test
  namespace: egresstest
  labels:
    app: egress-test 
spec:
  ports:
  - port: 8000
    name: http
  selector:
    app: egress-test
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: egress-test
  namespace: egresstest
  labels:
    account: orders
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: egress-test
  namespace: egresstest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: egress-test
      tier: backend
  template:
    metadata:
      labels:
        app: egress-test
        tier: backend
    spec:
      serviceAccountName: egress-test
      containers:
        - name: egress-test
          image: pliniogsnascimento/egress-test:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          resources:
            requests:
              cpu: "50m"
          readinessProbe:
            httpGet:
              path: /api/health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /api/health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 3600
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: egress-test-route
  namespace: egresstest
spec:
  hosts:
  - "*"
  gateways:
  - ingress-apps
  http:
  - match:
    - uri:
        prefix: "/go/"
    rewrite:
      uri: "/"
    route:
    - destination:
        host: egress-test.egresstest.svc.cluster.local
        port:
          number: 8000
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ingress-apps
  namespace: egresstest
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"